from tensorflow.keras.applications import EfficientNetB2
from tensorflow.keras.layers import Dense, GlobalAveragePooling2D, PReLU, Softmax
from tensorflow.keras.models import Model

# Load CIFAR10 dataset
(x_train, y_train), (x_test, y_test) = tf.keras.datasets.cifar10.load_data()

x_train, x_test = x_train/255.0, x_test/255.0
x_val = x_train[:5000]; y_val = y_train[:5000]
x_train = x_train[5000:]; y_train = y_train[5000:]

base_model = EfficientNetB2(weights="imagenet", include_top=False, input_shape=(32,32,3), pooling="avg")
x = base_model.output
x = PReLU()(x)
output = Dense(10, activation='softmax')(x)
model = Model(inputs=base_model.input, outputs=output)

model.compile(optimizer=tf.keras.optimizers.SGD(learning_rate=0.01),
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(x_train, y_train, validation_data=(x_val, y_val), epochs=25, batch_size=32)

print("Evaluation:", model.evaluate(x_test, y_test))
